var tasks = {

	total: 33,

	1:{
	"task-title":"Основы: Как работает Emmet",
	"task-theory":"Привет. Сегодня мы будем знакомиться с Emmet – фантастической технологией, которая в разы ускоряет верстку, позволяя не писать закрывающие теги и угловые скобки. \<br\>\<br\> Чтобы увидеть как это работает, просто наберите в стоке \<b\>article\</b\> и нажмите на кнопку внизу. \<br\>\<br\> Вы сразу увидите результат.",
	"task-example":"article",
	},

	2:{
	"task-title":"Основы: Содержание элементов",
	"task-theory":"Чтобы указать содержание элемента, напишите его в фигурных скобках сразу после тега, вот так: \<br\>\<br\> \<b\>h1{...}\</b\> ",
	"task-example":"тег{содержимое тега}",
	},

	3:{
	"task-title":"Основы: Соседние элементы",
	"task-theory":"Чтобы перечислить соседние элементы, просто перечислите их через \+. Например, \<br\>\<br\> \<b\>h1+p+a\</b\> ",
	"task-example":"h1+p+a",
	},	
	4:{
	"task-title":"Основы: Содержимое соседних элементов",
	"task-theory":"Перечисляя соседние элементы, вы можете добавлять к ним содержимое. \+. Например, так\<br\>\<br\> \<b\>h2{...}+h2{...}\</b\> ",
	"task-example":"h2{Doc Brown}+h2{Marty}",
	},	

	5:{
	"task-title":"Основы: Вложенность!",
	"task-theory":"Вкладывать один тег в другой можно используя угловую скобку. Вот так: \<br\>\<br\> \<b\>article\>h1\</b\>",
	"task-example":"тег>тег",
	},

	6:{
	"task-title":"Основы: Больше вложенности!",
	"task-theory":"Вы можете вкладывать теги друг в друга до бесконечности, используя ту же самую угловую скобку. Вот так: \<br\>\<br\> \<b\>тег\>тег\>тег\</b\>. Попробуйте создать структуру области контента по образцу:  ",
	"task-example":"main>article>section>h1",
	},

	7:{
	"task-title":"Основы: Аттрибуты",
	"task-theory":"Для тегов можно задавать не только контент, но и аттрибуты. Для этого используются квадратные скобки. Попробуйте задать адрес изображения, используя аттрибут src. Вот так: : \<br\>\<br\> \<b\>img[src=cat.png]\</b\> ",
	"task-example":"img[src=cat.png]",
	},
	8:{
	"task-title":"Основы: Больше аттрибутов",
	"task-theory":"Для тегов можно задавать не только контент, но и аттрибуты. Для этого используются квадратные скобки. Попробуйте задать картинке адрес и ширину, используя атрибуты src и width. Вот так: : \<br\>\<br\> \<b\>img[src=cat.png][width=200]\</b\> ",
	"task-example":"img[src=cat.png][width=200]",
	},
	9:{
	"task-title":"Основы: Больше аттрибутов",
	"task-theory":"Продожим использование атрибутов и создадим три картинки, каждая из которых будет иметь свой адрес. Вот так: : \<br\>\<br\> \<b\>img[...]+img[...]+img[...]\</b\>",
	"task-example":"img[src=1.png]+img[src=2.png]+img[src=3.png]",
	},

	10:{
	"task-title":"Основы: Больше аттрибутов, больше тегов",
	"task-theory":"Альтернативный текст alt - обязательный аттрибут для картинки. Задайте картинкам адрес и аттрибут. Вот так: \<br\>\<br\> \<b\>img[src=...][alt=...]\</b\> ",
	"task-example":"img[src=1.png][alt=Марти]+img[src=2.png][alt=Док]",
	},
	11:{
	"task-title":"Основы: Простая навигация",
	"task-theory":"Создайте простое меню из трех ссылок внутри nav. Примерно так: \<b\>nav>a+a+a\</b\> \<br\>\<br\> Не забудьте указать href для ссылок",
	"task-example":"nav>a[href=1.html]+a[href=2.html]+a[href=3.html]",
	},
	12:{
	"task-title":"Основы: Структура страницы",
	"task-theory":" С помощью перечисления можно даже создать основную структуру для body.Создайте body с шапочкой, контентной областью, боковой колонкой и футером внутри.",
	"task-example":"body>header+main+aside+footer",
	},
	13:{
    "task-title":"Основы: классы",
    "task-theory":"Вы можете задавать классы элементам, прописывая их через точку: \<br\>\<br\> \<b\>тег\.класс\</b\>",
    "task-example":"h1.logo",
  },
  14:{
    "task-title":"Основы: несколько классов",
    "task-theory":"Просто перечислите все необходимые классы, разделив их точками \<br\>\<br\> \<b\>тег\.класс1\.класс2\</b\>",
    "task-example":"h1.logo.large.centered+p.text.medium",
  },
  15:{
    "task-title":"Основы: классный чит",
    "task-theory":"Если нужно написать div с каким-либо классом, название тега писать не нужно  \<br\>\<br\> \<b\>\.класс\</b\>",
    "task-example":".container>.row>.column",
  },

	16:{
	"task-title":"Основы: Мультипликаторы",
	"task-theory":"Если вам нужно создать пять ссылок, совсем не обязательно писать их все. Достаточно написать одну ссылку и умножить ее на пять: \<b\>a*5\</b\> ",
	"task-example":"a*5",
	},
	17:{
	"task-title":"Основы: Мультипликаторы родителей",
	"task-theory":"Если вам нужно создать пять элементов списка в меню,в каждой из которых будет ссылка, вам нужно умножать уже не li, a a, Вот так: \<b\>li*5>a\</b\> ",
	"task-example":"li*5>a",
	},
	18:{
	"task-title":"Группировка: используем скобочки",
	"task-theory":" Если контейнеров, содержащих элементы, больше одного, можно использовать скобки, чтобы сделать их независимыми.Примерно так:\<b\>(тег>тег)+(тег>тег)\</b\>. Создайте две статьи с заголовком в каждой",
	"task-example":"(article>p)+(article>p) ",
	},
	19:{
	"task-title":"Группировка: создаем статьи",
	"task-theory":" Усложним задание. Есть заголовок и две статьи. В каждой есть заголовок, и ссылка. Вы можете использовать \<br\>\<br\> \<b\>тег+(тег>тег)+(тег>тег)\</b\> ",
	"task-example":"h1+(article>h2+p+a)*2",
	},
	20:{
	"task-title":"Группировка: скобочки и умножение",
	"task-theory":" Скобки можно также использовать для умножения. Например, вам нужно получить три статьи. Вы просто пишете выражение для статьи и умножаете его на три. Создайте три статьи, каждая из которых будет иметь заголовок и параграф \<br\>\<br\> \<b\>(тег>тег+тег+тег)*3\</b\>",
	"task-example":"(article>h2+p)*3",
	},
	21:{
  "task-title":"Основы: комбинированые вложенности",
  "task-theory":"Группировать элементы можно не только при помощи скобочек. Вы можете подниматься на предыдущий уровень вложенности при помощи знака \^, например \<br\>\<br\> \<b\>div\>h1\>span{Заголовок}\^p\>span{Текст}\</b\>. Кстати, можно подняться на несколько уровней, если ввести несколько знаков \^",
  "task-example":"header>nav>ul>li{пункт меню}*4^^h1{Заголовок}",
  },
	22:{
	"task-title":"Основы: Рыбный контент",
	"task-theory":"Чтобы сгенерировать 'рыбный текст', используйте \<b\>lorem\</b\>. \<br\>\<br\> Lorem создаст несколько слов полезного, но бессмысленного текста.",
	"task-example":"lorem",
	},
	23:{
	"task-title":"Основы: Точное количество",
	"task-theory":"Чтобы сгенерировать рыбный текст определенной длины, используйте \<b\>lorem5\</b\>, \<b\>lorem20\</b\> или \<b\>lorem555\</b\>",
	"task-example":"lorem5",
	},
	24:{
	"task-title":"Основы: Больше рыбы",
	"task-theory":"Сэкономить время на базовой разметке можно, если использовать команду \<b\>html:5\</b\> , она создаст заготовку разметки и укажет !doctype",
	"task-example":"html:5",
	},

	25:{
	"task-title":"Основы: любая аббревиатура",
	"task-theory":"Emmet поддерживает все теги,даже те, которые еще не были изобретены. Это можно проверить, использовав теги для \<b\>DeLoream\</b\> и \<b\>Einstein\</b\>",
	"task-example":"delorean>einstein",
	},

 
  26:{
  "task-title":"Основы: Нумерация",
  "task-theory":"Часто требуется пронумеровать похожие блоки. Для этого существует значек $, который при умножении подставляет на свое место порядковый номер \<b\>ul\>li\.item\$*5\</b\> ",
  "task-example":"p>span.span${Текст$}*5",
  },
  27:{
  "task-title":"Основы: Убывающая нумерация",
  "task-theory":"Волшебное выражение $@- заставит элементы нумероваться в обратном порядке \<b\>ul\>li\.item\$@-*5\</b\> ",
  "task-example":"ul>li.item${Пункт$@-}*5",
  },
  28:{
  "task-title":"Основы: нумерация с указанного места",
  "task-theory":"Вы можете указать начало отсчета для нумерации \<b\>ul\>li\.item\$@5*5\</b\> ",
  "task-example":"h$@3{Заголовок $@3}*4",
  },
  29:{
  "task-title":"Основы: несколько порядков нумерации",
  "task-theory":"Просто напишите несколько символов $ подряд \<b\>a\.link\$\$\$\</b\> ",
  "task-example":"img[src=photo$$$.jpg]*7"
  },

	30:{
	"task-title":"Основы: стили",
	"task-theory":"Подключите файл стилей быстро и просто: используйте \<b\>link:css\</b\>",
	"task-example":"link:css",
	},

	31:{
	"task-title":"Основы: стили",
	"task-theory":"Задайте аттрибут href, чтобы подключить дополнительные файлы стилей, например \<b\>link:css[href=normalize.css]\</b\>",
	"task-example":"link:css[href=normalize.css]",
	},

	32:{
	"task-title":"Основы: стили",
	"task-theory":"Подключите внешний JavaScript файл, чтобы, например, добавить библиотеку jQuery. Используйте команду \<b\>script:src\</b\> \<br\>\<br\>  Не забудьте про атрибут src!",
	"task-example":"script:src",
	},
	33:{
	"task-title":"Основы: стили",
	"task-theory":"Чтобы точно знать, где заканчивается какой div, достаnочно включить режим автоматического комментирования. Добавьте вертикальную черту и латинскую 'с' в конце Emmet-выражения и комментарии появятся сами. Например: \<b\>.first|c\</b\>",
	"task-example":".first|c",
	}

}





